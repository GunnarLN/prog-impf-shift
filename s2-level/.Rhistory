strictprog <- rename(strictprog, Utterance = prog)
strictprog <- group_by(strictprog, worldstate, Utterance, stage) %>%
summarize(Probability = mean(probs)) #this is utterly redundant here, but w/e
strictprog <- filter(datalist, worldstate == "0.1,0.3,0.5"| worldstate == "0.1,0.3,0.5,0.7,0.9")
strictprog$prog <- ifelse(strictprog$prog == 1, "PROG", "IMPF")
strictprog <- rename(strictprog, Utterance = prog)
strictprog <- group_by(strictprog, worldstate, Utterance, stage) %>%
summarize(Probability = mean(probs)) #this is utterly redundant here, but w/e
progstrictgraph <- ggplot(filter(strict, Utterance == "PROG"), aes(fill=stage, y=Probability, x=Utterance)) + geom_bar(position="dodge", stat="identity")
strict <- filter(datalist, worldstate == "0.1,0.3,0.5"| worldstate == "0.1,0.3,0.5,0.7,0.9")
strict$prog <- ifelse(strict$prog == 1, "PROG", "IMPF")
strict <- rename(strict, Utterance = prog)
strict <- group_by(strict, worldstate, Utterance, stage) %>%
summarize(Probability = mean(probs)) #this is utterly redundant here, but w/e
progstrictgraph <- ggplot(filter(strict, Utterance == "PROG"), aes(fill=stage, y=Probability, x=Utterance)) + geom_bar(position="dodge", stat="identity")
progstrictgraph
View(strict)
progstrictgraph <- ggplot(filter(strict, Utterance == "PROG"), aes(fill=stage, y=Probability, x=worldstate)) + geom_bar(position="dodge", stat="identity")
progstrictgraph
ggsave("progstrict.jpg", plot = last_plot(), device = NULL, path = NULL,
scale = 1, width = NA, height = NA,
dpi = 300, limitsize = TRUE)
impfstrictgraph <- ggplot(filter(strict, Utterance == "IMPF"), aes(fill=stage, y=Probability, x=worldstate)) + geom_bar(position="dodge", stat="identity")
ggsave("impfstrict.jpg", plot = last_plot(), device = NULL, path = NULL,
scale = 1, width = NA, height = NA,
dpi = 300, limitsize = TRUE)
impfstrictgraph
impfstrictgraph <- ggplot(filter(strict, Utterance == "IMPF"), aes(fill=stage, y=Probability, x=worldstate)) + geom_bar(position="dodge", stat="identity") + theme_bw()
#making pretty graphs
library(stringr)
library(tidyr)
library(dplyr)
library(ggplot2)
library(jsonlite)
setwd("/Users/rebeccajarvis/Desktop/RSA/")
datalist <- data.frame(state = factor(), prob = numeric(), source = factor()) #names are useless here, not going to fix
for (filename in c("progutt-prog1-impf5.json", "progutt-prog1-impf1.json", "progutt-prog5-impf1.json", "impfutt-prog1-impf5.json", "impfutt-prog1-impf1.json", "impfutt-prog5-impf1.json", "impfutt-prog10-impf1.json", "progutt-prog10-impf1.json", "impfutt-prog1-impf10.json", "progutt-prog1-impf10.json"))
{
templist <- cbind(filename, fromJSON(filename, flatten=TRUE))
datalist <- rbind(datalist, templist)
}
rm(templist)
rm(filename)
datalist$filename <- as.character(datalist$filename)
datalist$prog <- ifelse(grepl(pattern = "progutt", x = datalist$filename), 1, 0)
datalist$impf <- ifelse(grepl(pattern = "impfutt", x = datalist$filename), 1, 0)
datalist$stage <- ifelse(grepl(pattern = "prog5-impf1", x = datalist$filename), "2: Late Emergent",
ifelse(grepl(pattern = "prog1-impf10", x = datalist$filename), "5: Late Expanding",
ifelse(grepl(pattern = "prog10-impf1", x = datalist$filename), "1: Early Emergent",
ifelse(grepl(pattern = "prog1-impf5", x = datalist$filename), "4: Early Expanding", "3: Categorical"))))
datalist <- subset(datalist, select = -c(filename))
datalist <- rename(datalist, "worldstate" = "x", "probs" = "y")
datalist$worldstate <- str_sub(datalist$worldstate, 2)
datalist$worldstate <- str_sub(datalist$worldstate, 1, nchar(datalist$worldstate) - 1)
datalist <- cbind(datalist, str_split_fixed(datalist$worldstate, ",", 5))
colnames(datalist)[6] <- "state1"
colnames(datalist)[7] <- "state2"
colnames(datalist)[8] <- "state3"
colnames(datalist)[9] <- "state4"
colnames(datalist)[10] <- "state5"
datalist$type <- ifelse(datalist$state3 == "" & datalist$state2 %in% c("0.3", "0.5"), "twosoon",
ifelse(datalist$state3 == "" & !(datalist$state2 %in% c("0.3", "0.5")), "twospaced",
ifelse(datalist$state3 != "" & datalist$state4 == "", "three",
ifelse(datalist$state4 != "" & datalist$state5 == "", "four",
ifelse(datalist$state5 != "", "five", 1)))))
impfstrictgraph <- ggplot(filter(strict, Utterance == "IMPF"), aes(fill=stage, y=Probability, x=worldstate)) + geom_bar(position="dodge", stat="identity") + theme_bw()
impfstrictgraph
#making pretty graphs
library(stringr)
library(tidyr)
library(dplyr)
library(ggplot2)
library(jsonlite)
setwd("/Users/rebeccajarvis/Desktop/RSA/")
datalist <- data.frame(state = factor(), prob = numeric(), source = factor()) #names are useless here, not going to fix
for (filename in c("progutt-prog1-impf5.json", "progutt-prog1-impf1.json", "progutt-prog5-impf1.json", "impfutt-prog1-impf5.json", "impfutt-prog1-impf1.json", "impfutt-prog5-impf1.json", "impfutt-prog10-impf1.json", "progutt-prog10-impf1.json", "impfutt-prog1-impf10.json", "progutt-prog1-impf10.json"))
{
templist <- cbind(filename, fromJSON(filename, flatten=TRUE))
datalist <- rbind(datalist, templist)
}
rm(templist)
rm(filename)
datalist$filename <- as.character(datalist$filename)
datalist$prog <- ifelse(grepl(pattern = "progutt", x = datalist$filename), 1, 0)
datalist$impf <- ifelse(grepl(pattern = "impfutt", x = datalist$filename), 1, 0)
datalist$stage <- ifelse(grepl(pattern = "prog5-impf1", x = datalist$filename), "2: Late Emergent",
ifelse(grepl(pattern = "prog1-impf10", x = datalist$filename), "5: Late Expanding",
ifelse(grepl(pattern = "prog10-impf1", x = datalist$filename), "1: Early Emergent",
ifelse(grepl(pattern = "prog1-impf5", x = datalist$filename), "4: Early Expanding", "3: Categorical"))))
datalist <- subset(datalist, select = -c(filename))
datalist <- rename(datalist, "worldstate" = "x", "probs" = "y")
datalist$worldstate <- str_sub(datalist$worldstate, 2)
datalist$worldstate <- str_sub(datalist$worldstate, 1, nchar(datalist$worldstate) - 1)
datalist <- cbind(datalist, str_split_fixed(datalist$worldstate, ",", 5))
datalist
View(datalist)
library(stringr)
library(tidyr)
library(dplyr)
library(ggplot2)
library(jsonlite)
#location of this folder on your computer
setwd("/Users/rebeccajarvis/Documents/prog-impf-shift/s2-level/")
#setwd("~/git/prog-impf-shift/s2-level/")
datalist <- data.frame()
for (filename in c("prog-5-s2.json", "impf-5-s2.json", "null-5-s2.json"))
{
templist <- cbind(filename, fromJSON(filename, flatten=TRUE))
datalist <- rbind(datalist, templist)
}
rm(templist)
rm(filename)
#ugly but oh well
#removing states I don't really want to plot--[0.7, 0.9] and one-event states, b/c they have to be described by null
datalist <- filter(datalist, y != 0)
#I think some of this is unneccessary, but I'll just leave it
datalist$x <- substring(datalist$x, 3)
datalist$x <- gsub('.{1}$', '', datalist$x)
datalist <- rename(datalist, worldstate = x)
datalist <- rename(datalist, freq = y)
datalist$stageno <- factor(datalist$sub,levels = c("emer1", "emer2", "cat", "exp1", "exp2"))
datalist$utterance <- ifelse(grepl(pattern = "prog", x = datalist$filename), "PROG",
ifelse(grepl(pattern = "impf", x = datalist$filename), "IMPF", "NULL"))
datalist <- subset(datalist, select = -c(model, sub, filename))
library(stringr)
library(tidyr)
library(dplyr)
library(ggplot2)
library(jsonlite)
#location of this folder on your computer
setwd("/Users/rebeccajarvis/Documents/prog-impf-shift/s2-level/")
#setwd("~/git/prog-impf-shift/s2-level/")
datalist <- data.frame()
for (filename in c("prog-5-s2.json", "impf-5-s2.json", "null-5-s2.json"))
{
templist <- cbind(filename, fromJSON(filename, flatten=TRUE))
datalist <- rbind(datalist, templist)
}
rm(templist)
rm(filename)
#ugly but oh well
#removing states I don't really want to plot--[0.7, 0.9] and one-event states, b/c they have to be described by null
datalist <- filter(datalist, y != 0)
#I think some of this is unneccessary, but I'll just leave it
datalist$x <- substring(datalist$x, 3)
datalist$x <- gsub('.{1}$', '', datalist$x)
datalist <- rename(datalist, worldstate = x)
datalist <- rename(datalist, freq = y)
datalist$stageno <- factor(datalist$sub,levels = c("emer1", "emer2", "cat", "exp1", "exp2"))
datalist$utterance <- ifelse(grepl(pattern = "prog", x = datalist$filename), "PROG",
ifelse(grepl(pattern = "impf", x = datalist$filename), "IMPF", "NULL"))
datalist <- subset(datalist, select = -c(model, sub, filename))
View(datalist)
datalist <- cbind(datalist, str_split_fixed(datalist$worldstate, ",", 5))
View(datalist)
colnames(datalist)[5] <- "ev1"
colnames(datalist)[6] <- "ev3"
colnames(datalist)[7] <- "ev5"
colnames(datalist)[8] <- "ev7"
colnames(datalist)[9] <- "ev9"
#I'll filter out nulls for now, since they're pretty uninteresting
datalist <- filter(datalist, utterance != "NULL")
prog <- filter(worldstate, ev1=="0.1" & ev3 == "0.3")
proglist <- filter(datalist, ev1=="0.1" & ev3 == "0.3")
library(stringr)
library(tidyr)
library(dplyr)
library(ggplot2)
library(jsonlite)
#location of this folder on your computer
setwd("/Users/rebeccajarvis/Documents/prog-impf-shift/s2-level/")
#setwd("~/git/prog-impf-shift/s2-level/")
datalist <- data.frame()
for (filename in c("prog-5-s2.json", "impf-5-s2.json", "null-5-s2.json"))
{
templist <- cbind(filename, fromJSON(filename, flatten=TRUE))
datalist <- rbind(datalist, templist)
}
rm(templist)
rm(filename)
#ugly but oh well
#removing states I don't really want to plot--[0.7, 0.9] and one-event states, b/c they have to be described by null
datalist <- filter(datalist, y != 0)
#I think some of this is unneccessary, but I'll just leave it
datalist$x <- substring(datalist$x, 3)
datalist$x <- gsub('.{1}$', '', datalist$x)
datalist <- rename(datalist, worldstate = x)
datalist <- rename(datalist, freq = y)
datalist$stageno <- factor(datalist$sub,levels = c("emer1", "emer2", "cat", "exp1", "exp2"))
datalist$utterance <- ifelse(grepl(pattern = "prog", x = datalist$filename), "PROG",
ifelse(grepl(pattern = "impf", x = datalist$filename), "IMPF", "NULL"))
datalist <- subset(datalist, select = -c(model, sub, filename))
#split out by event
datalist <- cbind(datalist, str_split_fixed(datalist$worldstate, ",", 5))
colnames(datalist)[5] <- "ev1"
colnames(datalist)[6] <- "ev3"
colnames(datalist)[7] <- "ev5"
colnames(datalist)[8] <- "ev7"
colnames(datalist)[9] <- "ev9"
?grepl
library(stringr)
library(tidyr)
library(dplyr)
library(ggplot2)
library(jsonlite)
#location of this folder on your computer
setwd("/Users/rebeccajarvis/Documents/prog-impf-shift/s2-level/")
#setwd("~/git/prog-impf-shift/s2-level/")
datalist <- data.frame()
for (filename in c("prog-5-s2.json", "impf-5-s2.json", "null-5-s2.json"))
{
templist <- cbind(filename, fromJSON(filename, flatten=TRUE))
datalist <- rbind(datalist, templist)
}
rm(templist)
rm(filename)
#ugly but oh well
#removing states I don't really want to plot--[0.7, 0.9] and one-event states, b/c they have to be described by null
datalist <- filter(datalist, y != 0)
#I think some of this is unneccessary, but I'll just leave it
datalist$x <- substring(datalist$x, 3)
datalist$x <- gsub('.{1}$', '', datalist$x)
datalist <- rename(datalist, worldstate = x)
datalist <- rename(datalist, freq = y)
datalist$stageno <- factor(datalist$sub,levels = c("emer1", "emer2", "cat", "exp1", "exp2"))
datalist$utterance <- ifelse(grepl(pattern = "prog", x = datalist$filename), "PROG",
ifelse(grepl(pattern = "impf", x = datalist$filename), "IMPF", "NULL"))
datalist <- subset(datalist, select = -c(model, sub, filename))
#I'll filter out nulls for now, since they're pretty uninteresting
datalist <- filter(datalist, utterance != "NULL")
proglist <- filter(datalist, grepl("0.1, 0.3", worldstate))
View(proglist)
!grepl("0.5", proglist)
!grepl("0.5", proglist$worldstate)
impflist <- filter(datalist, !grepl("0.1", worldstate) & !grepl("0.3", worldstate))
View(impflist)
#filtering out things with [0.1, 0.3]
proglist <- filter(datalist, grepl("0.1, 0.3", worldstate))
#filtering out things without 0.1
impflist <- filter(datalist, !grepl("0.1", worldstate))
datalist$statetype <- ifelse(grepl("0.1, 0.3", datalist$worldstate), progtype, 1)
datalist$statetype <- ifelse(grepl("0.1, 0.3", datalist$worldstate), "progtype", 1)
datalist$statetype <- ifelse(grepl("0.1, 0.3", datalist$worldstate), "progtype",
ifelse(!grepl("0.1", datalist$worldstate), "impftype", NA))
datalist <- filter(datalist, !is.NA(statetype))
?is.na
datalist <- filter(datalist, !is.na(statetype))
View(datalist)
graph2 <- ggplot(data=datalist2, aes(x = stageno, y = freq, colour = statetype, group = interaction(statetype, utterance))) + geom_line(aes(linetype = utterance)) + theme_bw() #+ geom_point()
datalist2 <- filter(datalist, !is.na(statetype))
graph2 <- ggplot(data=datalist2, aes(x = stageno, y = freq, colour = statetype, group = interaction(statetype, utterance))) + geom_line(aes(linetype = utterance)) + theme_bw() #+ geom_point()
graph2
sum2 <- summarise(datalist2, meanfreq = mean(freq))
View(sum2)
View(datalist2)
datalist2 <- group_by(datalist2, statesort, stageno, utterance)
library(stringr)
library(tidyr)
library(dplyr)
library(ggplot2)
library(jsonlite)
#location of this folder on your computer
setwd("/Users/rebeccajarvis/Documents/prog-impf-shift/s2-level/")
#setwd("~/git/prog-impf-shift/s2-level/")
datalist <- data.frame()
for (filename in c("prog-5-s2.json", "impf-5-s2.json", "null-5-s2.json"))
{
templist <- cbind(filename, fromJSON(filename, flatten=TRUE))
datalist <- rbind(datalist, templist)
}
rm(templist)
rm(filename)
#ugly but oh well
#removing states I don't really want to plot--[0.7, 0.9] and one-event states, b/c they have to be described by null
datalist <- filter(datalist, y != 0)
#I think some of this is unneccessary, but I'll just leave it
datalist$x <- substring(datalist$x, 3)
datalist$x <- gsub('.{1}$', '', datalist$x)
datalist <- rename(datalist, worldstate = x)
datalist <- rename(datalist, freq = y)
datalist$stageno <- factor(datalist$sub,levels = c("emer1", "emer2", "cat", "exp1", "exp2"))
datalist$utterance <- ifelse(grepl(pattern = "prog", x = datalist$filename), "PROG",
ifelse(grepl(pattern = "impf", x = datalist$filename), "IMPF", "NULL"))
datalist <- subset(datalist, select = -c(model, sub, filename))
#I'll filter out nulls for now, since they're pretty uninteresting
datalist <- filter(datalist, utterance != "NULL")
#optional further filtering to just plot select world states (can comment out)
#datalist <- filter(datalist, worldstate %in% c("0.1, 0.3", "0.3, 0.7", "0.1, 0.3, 0.5, 0.7, 0.9"))
#graph of each worldstate through all states (pretty hard to read)
fullgraph <- ggplot(data=datalist, aes(x = stageno, y = freq, colour = worldstate, group = interaction(worldstate, utterance))) + geom_line(aes(linetype = utterance)) + theme_bw() #+ geom_point()
#ggsave("s2-allstates.jpg", plot = fullgraph, device = NULL, path = NULL,
#       scale = 1, width = 10, height = 6,
#       dpi = 300, limitsize = TRUE)
####################
#just plotting a couple states
datalist1 <- filter(datalist, worldstate %in% c("0.1, 0.3", "0.3, 0.7", "0.1, 0.3, 0.5, 0.7, 0.9"))
smallgraph <- ggplot(data=datalist1, aes(x = stageno, y = freq, colour = worldstate, group = interaction(worldstate, utterance))) + geom_line(aes(linetype = utterance)) + theme_bw() #+ geom_point()
#ggsave("s2-smallgraph.jpg", plot = smallgraph, device = NULL, path = NULL,
#       scale = 1, width = 10, height = 6,
#       dpi = 300, limitsize = TRUE)
####################
#graph colored by "category"
multistate <- c("0.1, 0.3, 0.5, 0.7, 0.9", "0.1, 0.3, 0.5, 0.7", "0.1, 0.3, 0.5, 0.9", "0.1, 0.3, 0.7, 0.9", "0.1, 0.5, 0.7, 0.9", "0.3, 0.5, 0.7, 0.9", "0.1, 0.3, 0.5", "0.1, 0.3, 0.7", "0.1, 0.5, 0.7", "0.1, 0.3, 0.9", "0.1, 0.5, 0.9", "0.1, 0.7, 0.9", "0.3, 0.5, 0.7", "0.3, 0.5, 0.9", "0.3, 0.7, 0.9", "0.5, 0.7, 0.9")
twospread <- c("0.1, 0.7", "0.1, 0.9", "0.3, 0.7", "0.3, 0.9", "0.5, 0.7", "0.5, 0.9")
twonarrow <- c("0.1, 0.3", "0.3, 0.5", "0.1, 0.5")
datalist$statetype <- ifelse(datalist$worldstate %in% multistate, "multistate",
ifelse(datalist$worldstate %in% twospread, "twospread", "twonarrow"))
catgraph <- ggplot(data=datalist, aes(x = stageno, y = freq, colour = statetype)) + geom_line(aes(linetype = utterance, group = interaction(worldstate, utterance))) + theme_bw() #+ geom_point()
#ggsave("s2-allstates-bycat.jpg", plot = catgraph, device = NULL, path = NULL,
#       scale = 1, width = 8, height = 6,
#       dpi = 300, limitsize = TRUE)
#these lines average across all the states in a "category"
datalist <- group_by(datalist, statetype, stageno, utterance)
summary <- summarise(datalist, meanfreq = mean(freq))
sumgraph <- ggplot(data=summary, aes(x = stageno, y = meanfreq, colour = statetype, group = interaction(statetype, utterance))) + geom_line(aes(linetype = utterance)) + theme_bw() #+ geom_point()
#ggsave("s2-summary", plot = sumgraph, device = NULL, path = NULL,
#       scale = 1, width = 8, height = 6,
#       dpi = 300, limitsize = TRUE)
####################
# a faceted plot with all the data
ggplot(data=datalist,aes(x=stageno,y=freq,color=utterance,group=utterance)) +
geom_line(alpha=0.5) +
geom_point() +
facet_wrap(~worldstate) +
scale_color_manual(values=c("red", "blue")) +
theme_bw()
#ggsave("all-plot.png",height=7,width=11)
####################
datalist$statesort <- ifelse(grepl("0.1, 0.3", datalist$worldstate), "progtype",
ifelse(!grepl("0.1", datalist$worldstate), "impftype", NA))
datalist2 <- filter(datalist, !is.na(statesort))
library(stringr)
library(tidyr)
library(dplyr)
library(ggplot2)
library(jsonlite)
#location of this folder on your computer
setwd("/Users/rebeccajarvis/Documents/prog-impf-shift/s2-level/")
#setwd("~/git/prog-impf-shift/s2-level/")
datalist <- data.frame()
for (filename in c("prog-5-s2.json", "impf-5-s2.json", "null-5-s2.json"))
{
templist <- cbind(filename, fromJSON(filename, flatten=TRUE))
datalist <- rbind(datalist, templist)
}
rm(templist)
rm(filename)
#ugly but oh well
#removing states I don't really want to plot--[0.7, 0.9] and one-event states, b/c they have to be described by null
datalist <- filter(datalist, y != 0)
#I think some of this is unneccessary, but I'll just leave it
datalist$x <- substring(datalist$x, 3)
datalist$x <- gsub('.{1}$', '', datalist$x)
datalist <- rename(datalist, worldstate = x)
datalist <- rename(datalist, freq = y)
datalist$stageno <- factor(datalist$sub,levels = c("emer1", "emer2", "cat", "exp1", "exp2"))
datalist$utterance <- ifelse(grepl(pattern = "prog", x = datalist$filename), "PROG",
ifelse(grepl(pattern = "impf", x = datalist$filename), "IMPF", "NULL"))
datalist <- subset(datalist, select = -c(model, sub, filename))
#I'll filter out nulls for now, since they're pretty uninteresting
datalist <- filter(datalist, utterance != "NULL")
#optional further filtering to just plot select world states (can
datalist$statesort <- ifelse(grepl("0.1, 0.3", datalist$worldstate), "progtype",
ifelse(!grepl("0.1", datalist$worldstate), "impftype", NA))
datalist2 <- filter(datalist, !is.na(statesort))
datalist2 <- group_by(datalist2, statesort, stageno, utterance)
sum2 <- summarise(datalist2, meanfreq = mean(freq))
graph2 <- ggplot(data=datalist2, aes(x = stageno, y = freq, colour = statesort, group = interaction(statesort, utterance))) + geom_line(aes(linetype = utterance)) + theme_bw() #+ geom_point()
graph2
View(sum2)
graph2 <- ggplot(data=sum2, aes(x = stageno, y = meanfreq, colour = statesort, group = interaction(statesort, utterance))) + geom_line(aes(linetype = utterance)) + theme_bw() #+ geom_point()
graph2
datalist$statesort <- ifelse(grepl("0.1, 0.3", datalist$worldstate), "both1and3",
ifelse(!grepl("0.1", datalist$worldstate), "not1", NA))
datalist2 <- filter(datalist, !is.na(statesort))
datalist2 <- group_by(datalist2, statesort, stageno, utterance)
sum2 <- summarise(datalist2, meanfreq = mean(freq))
graph2 <- ggplot(data=sum2, aes(x = stageno, y = meanfreq, colour = statesort, group = interaction(statesort, utterance))) + geom_line(aes(linetype = utterance)) + theme_bw() + scale_color_manual(values=c("red", "blue"))
graph2
ggsave("statesort.png",height=7,width=11)
rm(datalist2)
rm(graph2)
rm(sum2)
library(stringr)
library(tidyr)
library(dplyr)
library(ggplot2)
library(jsonlite)
#location of this folder on your computer
setwd("/Users/rebeccajarvis/Documents/prog-impf-shift/s2-level/")
#setwd("~/git/prog-impf-shift/s2-level/")
datalist <- data.frame()
for (filename in c("prog-5-s2.json", "impf-5-s2.json", "null-5-s2.json"))
{
templist <- cbind(filename, fromJSON(filename, flatten=TRUE))
datalist <- rbind(datalist, templist)
}
rm(templist)
rm(filename)
#ugly but oh well
#removing states I don't really want to plot--[0.7, 0.9] and one-event states, b/c they have to be described by null
datalist <- filter(datalist, y != 0)
#I think some of this is unneccessary, but I'll just leave it
datalist$x <- substring(datalist$x, 3)
datalist$x <- gsub('.{1}$', '', datalist$x)
datalist <- rename(datalist, worldstate = x)
datalist <- rename(datalist, freq = y)
datalist$stageno <- factor(datalist$sub,levels = c("emer1", "emer2", "cat", "exp1", "exp2"))
datalist$utterance <- ifelse(grepl(pattern = "prog", x = datalist$filename), "PROG",
ifelse(grepl(pattern = "impf", x = datalist$filename), "IMPF", "NULL"))
datalist <- subset(datalist, select = -c(model, sub, filename))
#I'll filter out nulls for now, since they're pretty uninteresting
datalist <- filter(datalist, utterance != "NULL")
datalist$ev1 <- ifelse(grepl(worldstate, "0.1"), 1, NA)
datalist$ev1 <- ifelse(grepl(datalist$worldstate, "0.1"), 1, NA)
datalist$ev1 <- ifelse(grepl(worldstate, "0.1"), 1, NA)
datalist$ev1 <- ifelse(grepl("0.1", worldstate), 1, NA)
datalist$ev1 <- ifelse(grepl("0.1", datalist$worldstate), 1, NA)
datalist$ev1 <- ifelse(grepl("0.1", datalist$worldstate), 1, NA)
datalist$ev3 <- ifelse(grepl("0.1", datalist$worldstate), 3, NA)
datalist$ev5 <- ifelse(grepl("0.1", datalist$worldstate), 5, NA)
datalist$ev7 <- ifelse(grepl("0.1", datalist$worldstate), 7, NA)
datalist$ev9 <- ifelse(grepl("0.1", datalist$worldstate), 9, NA)
datalist$ev1 <- ifelse(grepl("0.1", datalist$worldstate), 1, NA)
datalist$ev3 <- ifelse(grepl("0.3", datalist$worldstate), 3, NA)
datalist$ev5 <- ifelse(grepl("0.5", datalist$worldstate), 5, NA)
datalist$ev7 <- ifelse(grepl("0.7", datalist$worldstate), 7, NA)
datalist$ev9 <- ifelse(grepl("0.9", datalist$worldstate), 9, NA)
?rbind
ev1data <- filter(datalist, !is.na(ev1))
View(ev1data)
ev1data <- filter(datalist, !is.na(ev1)) %>%
group_by(stageno, utterance) %>%
summarise(meanfreq = mean(freq))
View(ev1data)
ev1data <- filter(datalist, !is.na(ev1)) %>%
group_by(stageno, utterance) %>%
summarise(meanfreq = mean(freq)) %>%
mutate(event = 1)
ev1data <- filter(datalist, !is.na(ev1)) %>%
group_by(stageno, utterance) %>%
summarise(meanfreq = mean(freq)) %>%
mutate(event = 1)
ev3data <- filter(datalist, !is.na(ev3)) %>%
group_by(stageno, utterance) %>%
summarise(meanfreq = mean(freq)) %>%
mutate(event = 3)
ev5data <- filter(datalist, !is.na(ev5)) %>%
group_by(stageno, utterance) %>%
summarise(meanfreq = mean(freq)) %>%
mutate(event = 5)
ev7data <- filter(datalist, !is.na(ev7)) %>%
group_by(stageno, utterance) %>%
summarise(meanfreq = mean(freq)) %>%
mutate(event = 7)
ev9data <- filter(datalist, !is.na(ev9)) %>%
group_by(stageno, utterance) %>%
summarise(meanfreq = mean(freq)) %>%
mutate(event = 9)
eventdata <- rbind(ev1data, ev3data, ev5data, ev7data, ev9data)
View(eventdata)
rm(ev1data)
rm(ev3data)
rm(ev5data)
rm(ev7data)
rm(ev9data)
evgraph <- ggplot(data=eventdata, aes(x = stageno, y = meanfreq, colour = event, group = interaction(event, utterance)))
+ geom_line(aes(linetype = utterance))
+ theme_bw()
+ scale_color_manual(values=c("red", "blue"))
evgraph <- ggplot(data=eventdata, aes(x = stageno, y = meanfreq, colour = event, group = interaction(event, utterance))) +
geom_line(aes(linetype = utterance)) +
theme_bw() +
scale_color_manual(values=c("red", "blue"))
evgraph
#not elegant but works
ev1data <- filter(datalist, !is.na(ev1)) %>%
group_by(stageno, utterance) %>%
summarise(meanfreq = mean(freq)) %>%
mutate(event = "1")
ev3data <- filter(datalist, !is.na(ev3)) %>%
group_by(stageno, utterance) %>%
summarise(meanfreq = mean(freq)) %>%
mutate(event = "3")
ev5data <- filter(datalist, !is.na(ev5)) %>%
group_by(stageno, utterance) %>%
summarise(meanfreq = mean(freq)) %>%
mutate(event = "5")
ev7data <- filter(datalist, !is.na(ev7)) %>%
group_by(stageno, utterance) %>%
summarise(meanfreq = mean(freq)) %>%
mutate(event = "7")
ev9data <- filter(datalist, !is.na(ev9)) %>%
group_by(stageno, utterance) %>%
summarise(meanfreq = mean(freq)) %>%
mutate(event = "9")
eventdata <- rbind(ev1data, ev3data, ev5data, ev7data, ev9data)
rm(ev1data)
rm(ev3data)
rm(ev5data)
rm(ev7data)
rm(ev9data)
evgraph <- ggplot(data=eventdata, aes(x = stageno, y = meanfreq, colour = event, group = interaction(event, utterance))) +
geom_line(aes(linetype = utterance)) +
theme_bw() +
scale_color_manual(values=c("red", "blue"))
evgraph
evgraph <- ggplot(data=eventdata, aes(x = stageno, y = meanfreq, colour = event, group = interaction(event, utterance))) +
geom_line(aes(linetype = utterance)) +
theme_bw()
evgraph
ggsave("evgraph.png",height=7,width=11)
